cat <<END_OF_TEXT
#!/bin/bash

    # This program is free software: you can redistribute it and/or modify
    # it under the terms of the GNU General Public License as published by
    # the Free Software Foundation, either version 3 of the License, or
    # (at your option) any later version.

    # This program is distributed in the hope that it will be useful,
    # but WITHOUT ANY WARRANTY; without even the implied warranty of
    # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    # GNU General Public License for more details.

    # You should have received a copy of the GNU General Public License
    # along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Script to generate a colour scheme for Gnome Terminal
# NOTE all escaped variables are meant for use with Tempus themes generator

\[[ -z "\$PROFILE_NAME" ]] && PROFILE_NAME="Tempus ${scheme}"
\[[ -z "\$PROFILE_SLUG" ]] && PROFILE_SLUG="${scheme}"
\[[ -z "\$DCONF" ]] && DCONF=dconf
\[[ -z "\$UUIDGEN" ]] && UUIDGEN=uuidgen

TEMPUS_GNOME_TERMINAL_VERSION=0.1.0.20171122

dset() {
  local key="\$1"; shift
  local val="\$1"; shift
  
  if [[ "\$type" == "string" ]]; then
    val="'\$val'"
  fi
  
  "\$DCONF" write "\$PROFILE_KEY/\$key" "\$val"
}

dlist_append() {
  local key="\$1"; shift
  local val="\$1"; shift
  
  local entries="\$(
  {
    "\$DCONF" read "\$key" | tr -d '[]' | tr , "\n" | fgrep -v "\$val"
    echo "'\$val'"
  } | head -c-1 | tr "\n" ,
  )"
  
  "\$DCONF" write "\$key" "[\$entries]"
}

if which "\$DCONF" > /dev/null 2>&1; then
  [[ -z "\$BASE_KEY_NEW" ]] && BASE_KEY_NEW=/org/gnome/terminal/legacy/profiles:
  
  if [[ -n "`\$DCONF list \$BASE_KEY_NEW/`" ]]; then
    if which "\$UUIDGEN" > /dev/null 2>&1; then
      PROFILE_SLUG=`uuidgen`
    fi
    
    if [[ -n "`\$DCONF read \$BASE_KEY_NEW/default`" ]]; then
      DEFAULT_SLUG=`\$DCONF read \$BASE_KEY_NEW/default | tr -d \'`
    else
      DEFAULT_SLUG=`\$DCONF list \$BASE_KEY_NEW/ | grep '^:' | head -n1 | tr -d :/`
    fi
    
    DEFAULT_KEY="\$BASE_KEY_NEW/:\$DEFAULT_SLUG"
    PROFILE_KEY="\$BASE_KEY_NEW/:\$PROFILE_SLUG"
    
    \$DCONF dump "\$DEFAULT_KEY/" | \$DCONF load "\$PROFILE_KEY/"
    dlist_append \$BASE_KEY_NEW/list "\$PROFILE_SLUG"
    
    dset visible-name "'\$PROFILE_NAME'"
    dset palette "['#{col0}', '#{col1}', '#{col2}', '#{col3}', '#{col4}', '#{col5}', '#{col6}', '#{col7}', '#{col8}', '#{col9}', '#{col10}', '#{col11}', '#{col12}', '#{col13}', '#{col14}', '#{col15}']"
    dset background-color "'#{colbg}'"
    dset foreground-color "'#{colfg}'"
    dset bold-color "'#{colfg}'"
    dset bold-color-same-as-fg "true"
    dset use-theme-colors "false"
    dset use-theme-background "false"
    
    unset PROFILE_NAME
    unset PROFILE_SLUG
    unset DCONF
    unset UUIDGEN
    exit 0
  fi
fi

[[ -z "\$GCONFTOOL" ]] && GCONFTOOL=gconftool
[[ -z "\$BASE_KEY" ]] && BASE_KEY=/apps/gnome-terminal/profiles

PROFILE_KEY="\$BASE_KEY/\$PROFILE_SLUG"

gset() {
  local type="\$1"; shift
  local key="\$1"; shift
  local val="\$1"; shift
  
  "\$GCONFTOOL" --set --type "\$type" "\$PROFILE_KEY/\$key" -- "\$val"
}

glist_append() {
  local type="\$1"; shift
  local key="\$1"; shift
  local val="\$1"; shift
  
  local entries="\$(
  {
    "\$GCONFTOOL" --get "\$key" | tr -d '[]' | tr , "\n" | fgrep -v "\$val"
    echo "\$val"
  } | head -c-1 | tr "\n" ,
  )"
  
  "\$GCONFTOOL" --set --type list --list-type \$type "\$key" "[\$entries]"
}

glist_append string /apps/gnome-terminal/global/profile_list "\$PROFILE_SLUG"

gset string visible_name "\$PROFILE_NAME"
gset string palette "#{col0}:#{col1}:#{col2}:#{col3}:#{col4}:#{col5}:#{col6}:#{col7}:#{col8}:#{col9}:#{col10}:#{col11}:#{col12}:#{col13}:#{col14}:#{col15}"
gset string background_color "#{colbg}"
gset string foreground_color "#{colfg}"
gset string bold_color "#{colfg}"
gset bool bold_color_same_as_fg "true"
gset bool use_theme_colors "false"
gset bool use_theme_background "false"

unset PROFILE_NAME
unset PROFILE_SLUG
unset DCONF
unset UUIDGEN
unset TEMPUS_GNOME_TERMINAL_VERSION

END_OF_TEXT
